// Copyright 2025 NoSQLBooster All rights reserved. Generated by NoSQLBooster 10.0.5
import mongoose from 'mongoose';
const { Schema } = mongoose;

const UsersSchema = new Schema({
    UserName: String,
    FirstName: String,
    MiddleName: String,
    LastName: String,
    IsActive: Boolean,
    NPI: String,
    UPDFlag: String,
    Manager: String,
    MachineName: String,
    MACAddress: String,
    TabletType: Schema.Types.Mixed,
    ApplicationStringVersion: String,
    ApplicationVersion: Number,
    LastApplicationUpgradedDate: Date,
    LastSchemaUpgradedDate: Date,
    FacilityRef: String,
    FacilityName: String,
    CredentialRef: Schema.Types.Mixed,
    CredentialName: String,
    IsOnlineUser: Boolean,
    CreatedByRef: String,
    CreatedByName: String,
    CreatedOn: Date,
    UpdatedByRef: String,
    UpdatedByName: String,
    UpdatedOn: Date,
    CreatedTimeZone: String,
    UpdatedTimeZone: String,
    IsPHIMask: Boolean,
    LastModifiedBy: String,
    IsTouchMode: Boolean,
    FederalTaxId: String,
    FederalDrugId: String,
    IsRegionalMedicalOfficer: Boolean,
    StaffTypeRef: Number,
    StaffTypeName: String,
    Roles: [{
        _id: Schema.Types.ObjectId,
        RoleName: String,
        RoleDesc: String
    }],
    Signatures: [{
        SignatureImage: String,
        SignatureText: String,
        StartDate: Date,
        EndDate: Date,
        CreatedOn: Date,
        UpdatedOn: Date,
        CreatedTimeZone: String,
        UpdatedTimeZone: String,
        CreatedByRef: String,
        CreatedByName: String,
        UpdatedByRef: String,
        UpdatedByName: String,
        _id: Schema.Types.ObjectId,
        LastUpdatedBySystemRef: Schema.Types.Mixed,
        LastUpdatedBySystemValue: String
    }],
    Permissions: [{
        _id: String,
        PermissionKey: String,
        PermissionDesc: String
    }],
    GoalsAndMetrics: [{
        Metric: String,
        DataNotes: String,
        Achieved: String,
        MinRequired: String
    }],
    POD: [{
        _id: Schema.Types.ObjectId,
        HealthPlanRef: Schema.Types.Mixed,
        HealthPlanValue: String,
        HealthPlanCityRef: Schema.Types.Mixed,
        HealthPlanCityValue: String,
        StartDate: Date,
        EndDate: Schema.Types.Mixed,
        IsActive: Boolean,
        IsCareplanApplicable: Boolean,
        DischargeTrackerConfigDate: Date,
        SubMarketAccessRef: Schema.Types.Mixed
    }],
    IsDataEntryFacilityRequired: Boolean,
    LastPingDateAndTime: Date,
    Title: String,
    StateLicenseNumber: String,
    NewcropUserRole: String,
    NewcropUserRoleDescription: String,
    DocuSignTemplateConfig: [{
        CityRef: Schema.Types.Mixed,
        CityValue: String,
        ValidFrom: Date,
        BrandRef: Schema.Types.Mixed,
        BrandValue: String,
        IsHITApplicable: Boolean,
        IsHIEApplicable: Boolean,
        IsROIApplicable: Boolean,
        _id: Schema.Types.ObjectId
    }],
    NewCropAttemptCount: Number,
    Latitude: String,
    Longitude: String,
    IsDataEntryRequired: Boolean,
    EmployeeId: String,
    RampStartDate: Date,
    IsSpanishSpeaking: Boolean,
    CellPhone: String,
    HomePhone: String,
    WorkPhone: String,
    IsRoleChanged: Boolean,
    Street: String,
    City: String,
    State: String,
    PostalCode: String,
    DefaultMarketValue: String,
    DefaultMarketRef: Number,
    PatientDeleteDays: Number,
    DirectEmail: String,
    DirectEmailPassword: Schema.Types.Mixed,
    StateSpecificDEA: [{
        _id: Schema.Types.ObjectId,
        StateRef: String,
        StateName: String,
        DeaNumber: String,
        StateLicenseNumber: String,
        IsActive: Boolean,
        IsStateLicenseNumberValid: Boolean,
        CreatedByName: String,
        CreatedByRef: String,
        CreatedOn: Date,
        CreatedTimeZone: String,
        UpdatedByName: String,
        UpdatedByRef: String,
        UpdatedOn: Date,
        UpdatedTimeZone: String
    }],
    UserFavouriteCategories: [{
        _id: Schema.Types.ObjectId,
        CategoryId: Schema.Types.Mixed,
        Name: String,
        ParentId: Schema.Types.Mixed,
        CategoryOrder: Schema.Types.Mixed,
        IsActive: Boolean,
        Level: Schema.Types.Mixed,
        CreatedByRef: String,
        CreatedByName: String,
        CreatedOn: Date,
        CreatedTimeZone: String,
        UpdatedByRef: String,
        UpdatedByName: String,
        UpdatedOn: Date,
        UpdatedTimeZone: String
    }],
    DirectEmailSPI: String,
    DirectEmailCreationResponse: String,
    PasswordExpiryDate: Date,
    PasswordAlertTime: Date,
    TrafficModelRef: Schema.Types.Mixed,
    TrafficModelValue: String,
    IsAssociateRegionalMedicalOfficer: Boolean,
    IsDebugEnabled: Boolean,
    IsMobileAppActive: Boolean,
    ValidFrom: Date,
    CoSignStaff: [{
        _id: Schema.Types.ObjectId,
        FacilityRef: String,
        FacilityName: String,
        Location: String,
        ChartReviewRequirementsPercentage: Number,
        CreatedByRef: String,
        CreatedByName: String,
        CreatedOn: Date,
        CreatedTimeZone: String,
        UpdatedByRef: String,
        UpdatedByName: String,
        UpdatedOn: Date,
        UpdatedTimeZone: String,
        CoSignStaffUserName: String,
        HealthPlanRef: Schema.Types.Mixed,
        HealthPlanValue: String
    }],
    AdditionalInfo: String,
    Email: String,
    IsAlertCare: Boolean,
    IsPalliative: Boolean,
    IsRisk: Boolean,
    JobDescription: String,
    Languages: [{
        LanguageRef: Schema.Types.Mixed,
        LanguageName: String
    }],
    SOSMethodName: Schema.Types.Mixed,
    SOSMethodRef: Schema.Types.Mixed,
    UpdatedOnUTC: Date,
    PrefixName: Schema.Types.Mixed,
    TaxonomyCode: String,
    feedbackLoopId: String,
    OptumUserName: String,
    LastLoggedInDate: Date,
    IsCloudMobile: Boolean,
    IsCloudSwitchEnabled: Boolean,
    IsCloudUbiquity: Boolean,
    RecordLastModifiedByRef: String,
    RecordLastModifiedUTC: Date,
    IsTelemetryEnabled: Boolean,
    UpdateTimeZone: String,
    IsPushToEventHub: Boolean,
    InActivatedDate: Date,
    Address: [{
        _id: Schema.Types.ObjectId,
        Street: String,
        Street2: Schema.Types.Mixed,
        City: String,
        StateName: String,
        StateRef: Schema.Types.Mixed,
        PostalCode: String,
        Lat: String,
        Long: String,
        StartDate: Date,
        EndDate: Date,
        IsActive: Boolean,
        LastModifiedBy: String,
        LastUpdatedBySystemRef: Schema.Types.Mixed,
        LastUpdatedBySystemValue: String,
        UPDFlag: String,
        CreatedByRef: String,
        CreatedByName: String,
        CreatedOn: Date,
        CreatedTimeZone: String,
        UpdatedByRef: String,
        UpdatedByName: String,
        UpdatedOn: Date,
        UpdatedTimeZone: String
    }],
    LastDataReceivedFromServerDate: Date,
    LastDataSendToServerDate: Date,
    PanelListingCustomFields: [{
        FieldKey: String,
        DisplayName: String,
        IsNotMandatory: Boolean
    }],
    AliveAt: Date,
    MarketDriveTime: Number,
    StaffDriveTime: Number,
    DefaultDriveTime: Number,
    DraftRampStartDate: Schema.Types.Mixed,
    RampTerminationDate: Date,
    DoNotScheduleIVAppointments: Boolean,
    PushNotificationToken: String,
    CurrentPanelSize: Number,
    MobileAppVersion: String,
    IsJoeFinderAccess: Boolean,
    StateRef: Schema.Types.Mixed,
    LastDeleteRunDate: Schema.Types.Mixed,
    DefaultScheduleHoursRangeConfig: {
        _id: Schema.Types.ObjectId,
        StartTime: String,
        EndTime: String,
        Interval: Number
    },
    CurrentScheduleHoursRangeConfig: {
        _id: Schema.Types.ObjectId,
        StartTime: String,
        EndTime: String,
        Interval: Number
    },
    LastUpdatedBySystemRef: Schema.Types.Mixed,
    LastUpdatedBySystemValue: String,
    MasterSyncInfo: [{
        MasterType: String,
        Version: Number,
        CreatedOn: Date,
        CreatedTimeZone: String,
        UpdatedOn: Date,
        UpdatedTimeZone: String
    }],
    IsUserMessagesCountUpdated: Boolean,
    LastRecordedLatitude: String,
    LastRecordedLongitude: String,
    LastLatLongRecordedDate: Date,
    NiceIncontactAutoLogin: Boolean,
    MessagingId: String,
    DeviceRegisteredOn: Date,
    Platform: String,
    PersonalisedKeys: [{
        _id: Schema.Types.ObjectId,
        ShortName: String,
        Description: String,
        IsActive: Boolean,
        CoderQuestions: Schema.Types.Mixed,
        CreatedByRef: String,
        CreatedByName: String,
        CreatedOn: Date,
        CreatedTimeZone: String,
        UpdatedByRef: String,
        UpdatedByName: String,
        UpdatedOn: Date,
        UpdatedTimeZone: String
    }],
    MessageCountNotificationSentOnUTC: Schema.Types.Mixed,
    DefaultCalendarView: String,
    DefaultCalendarViewRef: Schema.Types.Mixed,
    UserPreferences: {
        CCDAViewerConfig: [{
            SectionId: Number,
            SectionName: String,
            SectionFunction: String,
            Order: Number,
            IsDisplayValue: Boolean,
            IsActive: Boolean
        }]
    },
    AthenaUserName: String,
    ShowShellAppView: Boolean,
    Street2: String,
    DisplayName: String,
    IsMobileVidyoLogEnabled: Schema.Types.Mixed,
    DeviceDetails: {
        _id: String,
        AuthenticationId: Schema.Types.Mixed,
        UserType: Number,
        Name: String,
        IsVideoEnabled: Boolean,
        MessagingId: String,
        Platform: Number,
        OngoingCallId: Schema.Types.Mixed,
        State: Number,
        IsProductionBuild: Boolean,
        DeviceRegisteredOn: Date,
        LastUpdatedOn: Date,
        ApplicationVersion: Schema.Types.Mixed
    },
    VisitDetails: [{
        _id: Schema.Types.ObjectId,
        AcuityBHAcuityRef: Schema.Types.Mixed,
        AcuityBHAcuityName: String,
        VisitTypeValue: String,
        VisitTypeRef: Schema.Types.Mixed,
        DurationRef: Schema.Types.Mixed,
        IsActive: Boolean,
        CreatedByRef: String,
        CreatedByName: String,
        CreatedOn: Date,
        CreatedTimeZone: String,
        UpdatedByRef: String,
        UpdatedByName: String,
        UpdatedOn: Date,
        UpdatedTimeZone: String
    }],
    ShouldUpdateAddressForAppointments: Boolean,
    IsCoderQa: Boolean,
    ChartReviewCap: Number,
    WeeklyAssignedChartCount: Number,
    LastModified: String,
    ReactivationDate: Date,
    IsEncounterSwitchEnabled: Boolean,
    AthenaProviderId: Number,
    IsHIEApplicable: Schema.Types.Mixed,
    IsHITApplicable: Schema.Types.Mixed,
    Acuity: Schema.Types.Mixed,
    StateSpecificCoSignStaff: Schema.Types.Mixed,
    LandmarkFacilities: Schema.Types.Mixed,
    MedicationMaster: Schema.Types.Mixed,
    Messages: Schema.Types.Mixed,
    PODUsers: Schema.Types.Mixed,
    PatientPanel: Schema.Types.Mixed,
    PatientPanelMaster: Schema.Types.Mixed,
    Patients: Schema.Types.Mixed,
    StaffAvailability: Schema.Types.Mixed,
    IsInitialSyncInProgress: Schema.Types.Mixed,
    Ph_id: String,
    LockedBy: Schema.Types.Mixed,
    IsAdmitsMovedFromPatients: Schema.Types.Mixed,
    NeedToCleanUp: Schema.Types.Mixed
}, { collection: "Users" });
