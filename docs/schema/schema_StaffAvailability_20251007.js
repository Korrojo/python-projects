// Copyright 2025 NoSQLBooster All rights reserved. Generated by NoSQLBooster 10.0.5
import mongoose from 'mongoose';
const { Schema } = mongoose;

const StaffAvailabilitySchema = new Schema({
    StaffRef: String,
    StaffName: String,
    StaffType: String,
    OutsideAvailablityLockedBy: Schema.Types.Mixed,
    StaffUserName: String,
    AvailabilityDate: Date,
    RecordId: String,
    IsActive: Boolean,
    IsOverridenTemplate: Boolean,
    IsSystemCreated: Boolean,
    TemplateRef: String,
    TemplateName: String,
    TemplateVersion: Schema.Types.Mixed,
    PreviousTemplateRef: String,
    PreviousTemplateVersion: Schema.Types.Mixed,
    IsDefault: Boolean,
    Slots: [{
        _id: Schema.Types.ObjectId,
        StartTime: String,
        EndTime: String,
        MarketRef: Number,
        PatientMarketRef: Schema.Types.Mixed,
        MarketValue: String,
        SlotTypeRef: Schema.Types.Mixed,
        SlotTypeValue: String,
        OverageTime: Number,
        Capacity: Number,
        CanBeOptimized: Boolean,
        OriginalCanOptimized: Boolean,
        IsOptimized: Boolean,
        LastOptimizedTime: Date,
        LockedOn: Schema.Types.Mixed,
        LockedBy: Schema.Types.Mixed,
        IsEligibleForNextSlotTravelTime: Boolean,
        IsExceptionSlot: Boolean,
        RecordId: String,
        SlotOrder: Schema.Types.Mixed,
        SlotStatusRef: Number,
        SlotStatusValue: String,
        ISAvailableForIVQueue: Boolean,
        ExceptionReasonTypeRef: Schema.Types.Mixed,
        ExceptionReasonValue: String,
        ExceptionReasonTypeRefBackup: Schema.Types.Mixed,
        ExceptionReasonValueBackup: Schema.Types.Mixed,
        Appointments: [{
            _id: Schema.Types.ObjectId,
            AdminTimeRef: String,
            IsPartOfRecurringAdminTime: Boolean,
            PatientRef: Number,
            PatientName: String,
            AppointmentTypeRef: Schema.Types.Mixed,
            AppointmentTypeValue: String,
            AdminAppointmentTypeRef: Schema.Types.Mixed,
            AdminAppointmentTypeValue: String,
            VisitTypeRef: Schema.Types.Mixed,
            VisitTypeValue: String,
            VisitStartDateTime: String,
            VisitStartEndTime: String,
            VisitActualStartDateTime: String,
            VisitActualEndDateTime: String,
            DisplayInCalendar: Boolean,
            ColorCode: String,
            VisitLat: String,
            VisitLong: String,
            VisitAddress: String,
            VisitAddressTypeRef: Schema.Types.Mixed,
            VisitAddressTypeValue: String,
            VisitNotes: String,
            IsPatientCancelled: Boolean,
            VisitStatus: String,
            VisitStatusRef: Schema.Types.Mixed,
            SubStatusesRef: Schema.Types.Mixed,
            SubStatusesValue: String,
            CancelNotes: String,
            IsExceptionAppointment: Boolean,
            AppointmentDuration: Number,
            GeographicalInstructions: String,
            StatusRef: Number,
            StatusValue: String,
            ExceptionReasonTypeRef: Schema.Types.Mixed,
            ExceptionReasonValue: String,
            PatientVisitId: String,
            Comments: String,
            CreatedByRef: String,
            CreatedByName: String,
            CreatedOn: Date,
            CreatedTimeZone: String,
            UpdatedByRef: String,
            SafetyAlert: [],
            UpdatedByName: String,
            UpdatedOn: Date,
            UpdatedTimeZone: String,
            PriorTravelTime: Number,
            NextTravelTime: Number,
            City: String,
            IsEncounterExists: Boolean,
            UPDFlag: String,
            LastModifiedBy: String,
            IsPrecisionTime: Boolean,
            IsFirstPrecisionAppointment: Boolean,
            IsReschedule: Boolean,
            RescheduledAppointmentRef: String,
            IsScheduleOutsideAppointment: Boolean,
            IsConfirmed: Boolean,
            IsConfirmedFromPatient: Boolean,
            IsPalliativeCoVisit: Boolean,
            SubMarketAccessRef: Schema.Types.Mixed,
            PatientPodRef: String,
            PreviousVisitTypeRef: Schema.Types.Mixed,
            PreviousVisitTypeValue: String,
            VisitTypeChangedBy: String,
            VisitTypeChangedOn: Date,
            VisitTypeChangedTimeZone: String,
            ScheduledFrom: String,
            _safetyAlert: [],
            ConfirmedByUserName: String,
            ConfirmedByFullName: String,
            ConfirmedOn: Date,
            ConfirmedTimeZone: String,
            IsAvailableBlock: Boolean,
            CanAvailableBlockMove: Boolean,
            IsJoeFinderCancelled: Boolean,
            PalliativeCoVisitAppointmentRef: String,
            PalliativeCoVisitPartnerUserRef: String,
            PalliativeCoVisitPartnerUserName: String,
            PalliativeCoVisitPartnerName: String,
            AthenaAppointmentId: Schema.Types.Mixed,
            JoeFinderAppointmentOrder: Number,
            IsAvailableBlockPresent: Boolean,
            IsAvailableBlockMovable: Boolean,
            AvailableBlockStartTime: String,
            ServiceLine: Schema.Types.Mixed,
            IsSWTelemedAppointment: Schema.Types.Mixed
        }],
        CreatedByRef: String,
        CreatedByName: String,
        CreatedOn: Date,
        CreatedTimeZone: String,
        UpdatedByRef: String,
        UpdatedByName: String,
        UpdatedOn: Date,
        UpdatedTimeZone: String,
        ISAvailableForMVQueue: Boolean,
        UPDFlag: String,
        LastModifiedBy: String,
        IsOverridenWithNoAvailability: Boolean,
        IsConvertedByPrecisionAppointment: Boolean,
        SlotTypeRefBeforeMicroOptimization: Schema.Types.Mixed,
        SlotTypeValueBeforeMicroOptimization: String,
        ISAvailableForIVQueueBeforeMicroOptimization: Boolean,
        ISAvailableForMVQueueBeforeMicroOptimization: Boolean,
        IsSlotNotAvailableForScheduling: Schema.Types.Mixed,
        SlotNotAvailableReason: Schema.Types.Mixed,
        NextSlotAppointmentTravelTime: Number,
        TotalNumVisitsScheduled: Number,
        TotalUsedAdminTime: Number,
        TotalUsedVisitTime: Number,
        TotalUsedTravelTime: Number,
        TotalAvailableVisitTime: Number,
        UnUsableSlotTime: Number,
        IVtoScheduleAvailable: Number,
        IVtoScheduleAvailableBeforeMicroOptimization: Number,
        IsDeactivatedByRampTerminationDate: Boolean,
        SlotStatusRefBackup: Number,
        SlotStatusValueBackup: String
    }],
    Zipcodes: [String],
    IVLockedOn: Schema.Types.Mixed,
    IVLockedBy: Schema.Types.Mixed,
    IsAvailableForMVQueue: Boolean,
    IsAvailableForIVQueue: Boolean,
    ActualNumIVAppointments: Schema.Types.Mixed,
    IVtoScheduleAvailable: Number,
    IVtoScheduleAvailableBeforeMicroOptimization: Number,
    MaxIVAllowed: Number,
    IsOptimizationRequired: Boolean,
    CreatedByRef: String,
    CreatedByName: String,
    CreatedOn: Date,
    CreatedTimeZone: String,
    UpdatedByRef: String,
    UpdatedByName: String,
    UpdatedOn: Date,
    UpdatedTimeZone: String,
    UPDFlag: String,
    LastModifiedBy: String,
    IsOverridenWithNoAvailability: Boolean,
    LockedOn: Schema.Types.Mixed,
    LockedBy: Schema.Types.Mixed,
    IsRisk: Boolean,
    IsPalliative: Boolean,
    IsAlertCare: Boolean,
    RecordLastModifiedByRef: String,
    RecordLastModifiedUTC: Date,
    PatientRefList: [],
    SlotTypeRef: Schema.Types.Mixed,
    SlotTypeValue: String,
    IsDeactivatedByRampTerminationDate: Boolean,
    feedbackLoopId: String,
    LockedFromScreen: Schema.Types.Mixed
}, { collection: "StaffAvailability" });
